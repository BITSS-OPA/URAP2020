df$names <- factor(df$names, levels = df$names[order(df$birthdate)])
df <- data.frame("names" = my_name ,
"birthdate" = as.Date(my_bd
, "%m/%d") )
qplot(data = df, x = names, y = birthdate )
df$names <- factor(df$names, levels = df$names[order(df$birthdate)])
df <- data.frame("names" = my_name ,
"birthdate" = as.Date(my_bd
, "%m/%d") )
qplot(data = df, x = names, y = birthdate )
df$names
df$names[order(df$birthdate)]
qplot(data = df, x = reorder(names, -as.numeric(birthdate)), y = birthdate )
# When is your birthdate? Only Month and day.
# Format "Month/date". For example for date "January 9th", we write "01/09"
my_name <- NULL
my_bd <- NULL
my_name[13] <- "Joseph"
my_bd[13] <- "01/08"
my_name[12] <- "Stacy"
my_bd[12] <- "02/17"
my_name[11] <- "Mary-Alice"
my_bd[11] <- "07/29"
my_name[10] <- "Aleks"
my_bd[10] <- "01/13"
my_name[9] <- "Victoria"
my_bd[9] <- "08/11"
my_name[8] <- "Jenny"
my_bd[8] <- "06/21"
my_name[7] <- "Diego"
my_bd[7] <- "10/03"
my_name[6] <- "Tugba"
my_bd[6] <- "05/02"
my_name[5] <- "Zafiro"
my_bd[5] <- "08/31"
my_name[4] <- "cyn"
my_bd[4] <- "10/17"
my_name[3] <- "Beyonce Knowles-Carter"
my_bd[3] <- "09/04"
my_name[1] <- "Michael"
my_bd[1] <- "12/15"
my_name[2] <- "Daniel"
my_bd[2] <- "09/14"
# When done, save, commit, push and make your first pull request.
###################################
df <- data.frame("names" = my_name ,
"birthdate" = as.Date(my_bd
, "%m/%d") )
qplot(data = df, x = reorder(names, as.numeric(birthdate)), y = birthdate )
library(combinat)
install.packages(combinat)
install.packages("combinat")
load("~/Desktop/sandbox/nber_trends/rawdata/all_NBER_Papers_v1.RData")
write_csv()
library(tidyverse)
write_csv()
write_csv(x = df, )
getwd()
cd
cd ..
setwd
setwd("/Users/fhoces/Desktop/sandbox/RT2_LOSANGELES_2018/")
write_csv(x = df, "test/csv")
write_csv(x = df, "test.csv")
df1 <- read_csv(x = df, "test.csv")
df1 <- read_csv( "test.csv")
apply(df1, 2, class)
apply(df, 2, class)
install.packages("compare")
comparison <- compare::compare(df,df1,allowAll=TRUE)
str(comparison)
all(df == df1) #
names(df)
names(df1)
setdiff(df1, df)
setwd("~/Desktop/sandbox/nber_trends")
df1 <- read_csv( "~/rawdata/test.csv")
getwd(\)
getwd()
df1 <- read_csv( "/rawdata/test.csv")
df1 <- read_csv( "rawdata/test.csv")
df <- read_csv( "rawdata/test.csv")
df$num_authors <- sapply(strsplit(df$authors, "-*-", fixed = TRUE), length)
df %>% mutate(time = format(as.Date(df$date), "%Y")) %>% group_by(time) %>% summarise("ave_author_num"= mean(num_authors)) %>%   ggplot(aes(x=time, y = ave_author_num,  group = 1)) +
geom_line() +
labs(title = "Average Number of Authors Per NBER Working Paper")
# Extract NBER categories from html text
aux1 <- with(df,  regmatches(NBER_cat,
gregexpr("([A-Z]{1,4})\\.html", NBER_cat)))
# Paste multiple categories according to the following format "CAT1-*-CAT2-*-..."
df$NBER_cat <- sapply(aux1, function(y) paste( sub(x =y, ".html", "") , collapse = "-*-" ) )
# delete if no NBER category (306 papers)
df1 <- df[df$NBER_cat!='', ]
# For each paper: separate each cateary.
asd1 <- strsplit(df1$NBER_cat[], "-*-", fixed = TRUE)
# Get the number of categories per paper
n1 <- sapply(asd1, length)
# Generate numeric var for published and repeat for each repetition (category) of the paper
published <- rep(1*(df1$published!="Not published"), times = n1)
# Get year of working paper and expand
date1 <- format(as.Date( rep(df1$date, times = n1) ), "%Y")
# Same for categories
categories <- unlist(asd1)
# Expand authors var
authors <- rep((df1$authors), times = n1)
# Create a data frame with new vars
df2 <- data.frame(authors,published, categories, date1, stringsAsFactors = FALSE)
# Same as with categories, but for authors. Final data set has 79163 obs.
asd2 <- strsplit(df2$authors, "-*-", fixed = TRUE)
n2 <- sapply(asd2, length)
published <- rep(df2$published, times = n2)
categories <- rep(df2$categories, times = n2)
date1 <- rep(df2$date1, times = n2)
# Get the first name of each author.
first.name <- gsub("^(.*?),\\s(\\w+).*", "\\2",  unlist(asd2))
# Impute gender to each name
temp1 <- gender::gender(first.name)
# Keep only one obs per name
temp1 <- temp1[!duplicated(temp1),]
# Large size data with name, date and categories
temp2 <- data.frame("name"=first.name, date1, categories,
"full_name" =unlist(asd2), published)
# Merge with gender
temp3 <- right_join(temp1, temp2)
# Delete missing obs NEED TO UNDERSTAND THE MISMATCH (7471)
temp3 <- temp3[!is.na(temp3$gender),]
# Plot percentage of female authors over time: general and by categories
plot1 <- temp3 %>%
mutate(num_gen = 1*(gender != 'male')) %>%
group_by(date1, categories) %>%
summarise("perc_fem" = mean(num_gen,na.rm=TRUE),
"n_cat" = n()) %>%
filter(date1%in%1985:2015) %>%
filter(n_cat>30) %>%
ggplot(aes(x=date1, y = perc_fem, color = categories, group = categories)) +
geom_line() +
labs(title = "Percentage of Female Authors in NBER Working Papers",
subtitle = "Overall (red) and by research programe")
temp_df <- temp3 %>%
mutate(num_gen = 1*(gender != 'male')) %>%
group_by(date1) %>%
summarise("perc_fem" = mean(num_gen,na.rm=TRUE)) %>%
filter(date1%in%1985:2015)
plot1 +
geom_line(data = temp_df,
aes(x = date1, y = perc_fem, group=1),
color = "red", size = 2)
##Plot 1
df$num_authors <- sapply(strsplit(df$authors, "-*-", fixed = TRUE), length)
df %>% mutate(time = format(as.Date(df$date), "%Y")) %>%
group_by(time) %>%
summarise("ave_author_num"= mean(num_authors)) %>%
ggplot(aes(x=time, y = ave_author_num,  group = 1)) +
geom_line() +
labs(title = "Average Number of Authors Per NBER Working Paper")
getwd()
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv("DATAVERSE_KEY" = "examplekey12345")
Sys.setenv("DATAVERSE_SERVER" = "dataverse.harvard.edu")
# Loading required libraries
list.of.packages <- c("tidyverse", "gender", "arm")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages, repos= "http://cran.cnr.berkeley.edu/")
lapply(list.of.packages, require, character.only = TRUE)
# Setting working directory
library(here)
# Setting up workflow
for (folder in c("rawdata", "data", "documentation", "output", "paper", "scripts")) {
if ( !(folder %in% dir()) ) {
dir.create(folder)
}
}
#readme_file <- file.path("README.md")
writeLines("# Descriptive statistics of NBER Working Paper Series", "README.md")
load("~/rawdata/all_NBER_Papers_v1.RData")
load("rawdata/all_NBER_Papers_v1.RData")
##Plot 1
df$num_authors <- sapply(strsplit(df$authors, "-*-", fixed = TRUE), length)
df %>% mutate(time = format(as.Date(df$date), "%Y")) %>%
group_by(time) %>%
summarise("ave_author_num"= mean(num_authors)) %>%
ggplot(aes(x=time, y = ave_author_num,  group = 1)) +
geom_line() +
labs(title = "Average Number of Authors Per NBER Working Paper")
##Plot 2
# Extract NBER categories from html text
aux1 <- with(df,  regmatches(NBER_cat,
gregexpr("([A-Z]{1,4})\\.html", NBER_cat)))
# Paste multiple categories according to the following format "CAT1-*-CAT2-*-..."
df$NBER_cat <- sapply(aux1, function(y) paste( sub(x =y, ".html", "") , collapse = "-*-" ) )
# delete if no NBER category (306 papers)
df1 <- df[df$NBER_cat!='', ]
# For each paper: separate each cateary.
asd1 <- strsplit(df1$NBER_cat[], "-*-", fixed = TRUE)
# Get the number of categories per paper
n1 <- sapply(asd1, length)
# Generate numeric var for published and repeat for each repetition (category) of the paper
published <- rep(1*(df1$published!="Not published"), times = n1)
# Get year of working paper and expand
date1 <- format(as.Date( rep(df1$date, times = n1) ), "%Y")
# Same for categories
categories <- unlist(asd1)
# Expand authors var
authors <- rep((df1$authors), times = n1)
# Create a data frame with new vars
df2 <- data.frame(authors,published, categories, date1, stringsAsFactors = FALSE)
# Same as with categories, but for authors. Final data set has 79163 obs.
asd2 <- strsplit(df2$authors, "-*-", fixed = TRUE)
n2 <- sapply(asd2, length)
published <- rep(df2$published, times = n2)
categories <- rep(df2$categories, times = n2)
date1 <- rep(df2$date1, times = n2)
# Get the first name of each author.
first.name <- gsub("^(.*?),\\s(\\w+).*", "\\2",  unlist(asd2))
# Impute gender to each name
temp1 <- gender::gender(first.name)
# Keep only one obs per name
temp1 <- temp1[!duplicated(temp1),]
# Large size data with name, date and categories
temp2 <- data.frame("name"=first.name, date1, categories,
"full_name" =unlist(asd2), published)
# Merge with gender
temp3 <- right_join(temp1, temp2)
# Delete missing obs NEED TO UNDERSTAND THE MISMATCH (7471)
temp3 <- temp3[!is.na(temp3$gender),]
# Plot percentage of female authors over time: general and by categories
plot1 <- temp3 %>%
mutate(num_gen = 1*(gender != 'male')) %>%
group_by(date1, categories) %>%
summarise("perc_fem" = mean(num_gen,na.rm=TRUE),
"n_cat" = n()) %>%
filter(date1%in%1985:2015) %>%
filter(n_cat>30) %>%
ggplot(aes(x=date1, y = perc_fem, color = categories, group = categories)) +
geom_line() +
labs(title = "Percentage of Female Authors in NBER Working Papers",
subtitle = "Overall (red) and by research programe")
temp_df <- temp3 %>%
mutate(num_gen = 1*(gender != 'male')) %>%
group_by(date1) %>%
summarise("perc_fem" = mean(num_gen,na.rm=TRUE)) %>%
filter(date1%in%1985:2015)
plot1 +
geom_line(data = temp_df,
aes(x = date1, y = perc_fem, group=1),
color = "red", size = 2)
##Plot 3
# Publication rates over time by NBER program & total
plot2 <- temp3 %>%
group_by(date1, categories) %>%
summarise("pub_perc" = mean(published), n_papers = n()) %>%
filter(date1%in%1985:2010) %>%
filter(n_papers> 30) %>%
ggplot(aes(x=date1, y = pub_perc,
color = categories, group = categories)) +
geom_line() +
labs(title = "Percentage Of NBER Working Papers Published In Journals",
subtitle = "Overall (red) and by research programe")
temp_df <- temp3 %>%
group_by(date1) %>%
summarise("pub_perc" = mean(published,na.rm=TRUE)) %>%
filter(date1%in%1985:2010)
plot2 +
geom_line(data = temp_df,
aes(x = date1, y = pub_perc, group=1),
color = "red", size = 2)
# Publication rates over time by total and by gender
plot3 <- temp3 %>%
group_by(date1, gender) %>%
summarise("pub_perc" = mean(published), n_papers = n()) %>%
filter(date1%in%1985:2010) %>%
filter(n_papers> 30) %>%
ggplot(aes(x=date1, y = pub_perc,
color = gender, group = gender)) +
geom_line() +
labs(title = "Percentage Of NBER Working Papers Published In Journals",
subtitle = "Overall (red) and by gender")
temp_df <- temp3 %>%
group_by(date1) %>%
summarise("pub_perc" = mean(published,na.rm=TRUE)) %>%
filter(date1%in%1985:2010)
plot3 +
geom_line(data = temp_df,
aes(x = date1, y = pub_perc, group=1),
color = "red", size = 1)
# Publication rates by research programe (needs work)
if (FALSE) {
table1 <- table(date1, categories)
df3 <- tapply(published, INDEX = list(date1, categories), function(x) mean(x, na.rm = TRUE))
df3 <- df3[which(rownames(df3)%in%1980:2015),]
df2 <- as.data.frame.matrix(prop.table(table1, 1))
df2 <- df2[which(rownames(df2)%in%1980:2015),]
quartz()
plot(1980:2015,df2[,1], type ="l" ,lwd=0.1, ylim = c(0,.4))
for (i in ( 2:(dim(df2)[2]) ) ) lines(1980:2015,df2[,i], type ="l" ,lwd=1)
lines(1980:2015,df2[,"EFG"], type ="l" ,lwd=1, col="red")
lines(1980:2015,df2[,"LS"], type ="l" ,lwd=1, col="blue")
lines(1980:2015,df2[,"PE"], type ="l" ,lwd=1, col="green")
df3[is.na(df3)] <- 0
apply(df3,2, function(x) which(x==0))
quartz()
plot(1980:2015,df3[,1], type ="l" ,lwd=0.1, ylim = c(0,1))
for (i in ( 2:(dim(df3)[2]) ) ) lines(1980:2015,df3[,i], type ="l" ,lwd=1)
lines(1980:2015,df3[,"EFG"], type ="l" ,lwd=1, col="red")
lines(1980:2015,df3[,"LS"], type ="l" ,lwd=1, col="blue")
lines(1980:2015,df3[,"PE"], type ="l" ,lwd=1, col="green")
}
# Publication rates by research programe (needs work)
## Any effect of alphabetical order?
## Gender over time
# last name is not working well
asd1 <- strsplit(df$authors, "-*-", fixed = TRUE)
#Total number of authors
length(unique(unlist(asd1)))
n <- sapply(asd1, length)
published <- rep(df$published, times = n)
first.name <- gsub("^(.*?),\\s(\\w+).*", "\\2",  unlist(asd1))
last.name <- gsub("^(.*?),\\s(\\w+).*", "\\1",  unlist(asd1))
first.letter <- toupper(substr(last.name, 1, 1))
temp1 <- gender(first.name)
temp1 <- temp1[!duplicated(temp1),]
date1 <- format(as.Date( rep(df$date, times = n) ), "%Y")
temp2 <- data.frame("name"=first.name, "full_name" = unlist(asd1), date1, published, first.letter)
temp3  <- right_join(temp1, temp2)
#####Droping 1545 (of 11639) authors that do not a predicted gender
temp3 <- temp3[!is.na(temp3$gender),]
#Publishing rate by gender over time
df2 <- (tapply(temp3$published!="Not published", list(temp3$date1, temp3$gender), mean))
plot(x = 1973:2015, y = df2[,"female"], type="l", lty=3)
lines(x = 1973:2015, y = df2[,"male"], type="l", lty=1)
legend("topright",lty=c(3,1), legend = c("Female", "Male"))
published <- rep(df$published, times = n)
df1 <- data.frame(published, unlist(asd1))
#Overall count of WP by first letter
df2 <- tapply(df1$published, first.letter, length)
barplot(df2[(rownames(df2)%in%LETTERS)])
#Overall percentage published
tapply(df1$published!="Not published", as.factor(first.letter%in%LETTERS[1:13]), mean)
#Regression (almost done to include gender interaction)
#Delete letters with very few authors:
to.delete <- which(LETTERS%in%c("Q", "U", "X", "Y", "Z"))
df3 <- data.frame(y = (temp3$published!="Not published"),
first.letter=temp3$first.letter,
gender=temp3$gender)
df3 <- df3[df3$first.letter%in%LETTERS[-to.delete],]
fit1 <- lm(y~first.letter-1, data = df3)
arm::coefplot(fit1)
abline(v = mean(df3$y))
# If last name is between A-H then mean publication rate is 2% higher.
d1 <- 1*(df3$first.letter%in%LETTERS[1:8])
coef(summary(lm(df3$y~d1)))
setwd("~/Desktop/sandbox/RT2_LOSANGELES_2018")
350*20
70*9*20
70*9*10
num1 = sample(20000, 1)
num1
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv("DATAVERSE_KEY" = "examplekey12345")
Sys.setenv("DATAVERSE_SERVER" = "dataverse.harvard.edu")
# Loading required libraries
list.of.packages <- c("tidyverse", "gender", "arm")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages, repos= "http://cran.cnr.berkeley.edu/")
lapply(list.of.packages, require, character.only = TRUE)
# Setting working directory
library(here)
# Setting up workflow
for (folder in c("rawdata", "data", "documentation", "output", "paper", "scripts")) {
if ( !(folder %in% dir()) ) {
dir.create(folder)
}
}
#readme_file <- file.path("README.md")
writeLines("# Descriptive statistics of NBER Working Paper Series", "README.md")
# Chunk 4
#df <- read_csv( "rawdata/test.csv")
load("rawdata/all_NBER_Papers_v1.RData")
# Chunk 5: plot1
##Plot 1
df$num_authors <- sapply(strsplit(df$authors, "-*-", fixed = TRUE), length)
df %>% mutate(time = format(as.Date(df$date), "%Y")) %>%
group_by(time) %>%
summarise("ave_author_num"= mean(num_authors)) %>%
ggplot(aes(x=time, y = ave_author_num,  group = 1)) +
geom_line() +
labs(title = "Average Number of Authors Per NBER Working Paper")
# Chunk 6: plot2
##Plot 2
# Extract NBER categories from html text
aux1 <- with(df,  regmatches(NBER_cat,
gregexpr("([A-Z]{1,4})\\.html", NBER_cat)))
# Paste multiple categories according to the following format "CAT1-*-CAT2-*-..."
df$NBER_cat <- sapply(aux1, function(y) paste( sub(x =y, ".html", "") , collapse = "-*-" ) )
# delete if no NBER category (306 papers)
df1 <- df[df$NBER_cat!='', ]
# For each paper: separate each cateary.
asd1 <- strsplit(df1$NBER_cat[], "-*-", fixed = TRUE)
# Get the number of categories per paper
n1 <- sapply(asd1, length)
# Generate numeric var for published and repeat for each repetition (category) of the paper
published <- rep(1*(df1$published!="Not published"), times = n1)
# Get year of working paper and expand
date1 <- format(as.Date( rep(df1$date, times = n1) ), "%Y")
# Same for categories
categories <- unlist(asd1)
# Expand authors var
authors <- rep((df1$authors), times = n1)
# Create a data frame with new vars
df2 <- data.frame(authors,published, categories, date1, stringsAsFactors = FALSE)
# Same as with categories, but for authors. Final data set has 79163 obs.
asd2 <- strsplit(df2$authors, "-*-", fixed = TRUE)
n2 <- sapply(asd2, length)
published <- rep(df2$published, times = n2)
categories <- rep(df2$categories, times = n2)
date1 <- rep(df2$date1, times = n2)
# Get the first name of each author.
first.name <- gsub("^(.*?),\\s(\\w+).*", "\\2",  unlist(asd2))
# Impute gender to each name
temp1 <- gender::gender(first.name)
# Keep only one obs per name
temp1 <- temp1[!duplicated(temp1),]
# Large size data with name, date and categories
temp2 <- data.frame("name"=first.name, date1, categories,
"full_name" =unlist(asd2), published)
# Merge with gender
temp3 <- right_join(temp1, temp2)
# Delete missing obs NEED TO UNDERSTAND THE MISMATCH (7471)
temp3 <- temp3[!is.na(temp3$gender),]
# Plot percentage of female authors over time: general and by categories
plot1 <- temp3 %>%
mutate(num_gen = 1*(gender != 'male')) %>%
group_by(date1, categories) %>%
summarise("perc_fem" = mean(num_gen,na.rm=TRUE),
"n_cat" = n()) %>%
filter(date1%in%1985:2015) %>%
filter(n_cat>30) %>%
ggplot(aes(x=date1, y = perc_fem, color = categories, group = categories)) +
geom_line() +
labs(title = "Percentage of Female Authors in NBER Working Papers",
subtitle = "Overall (red) and by research programe")
temp_df <- temp3 %>%
mutate(num_gen = 1*(gender != 'male')) %>%
group_by(date1) %>%
summarise("perc_fem" = mean(num_gen,na.rm=TRUE)) %>%
filter(date1%in%1985:2015)
plot1 +
geom_line(data = temp_df,
aes(x = date1, y = perc_fem, group=1),
color = "red", size = 2)
# Chunk 7: plot3
##Plot 3
# Publication rates over time by NBER program & total
plot2 <- temp3 %>%
group_by(date1, categories) %>%
summarise("pub_perc" = mean(published), n_papers = n()) %>%
filter(date1%in%1985:2010) %>%
filter(n_papers> 30) %>%
ggplot(aes(x=date1, y = pub_perc,
color = categories, group = categories)) +
geom_line() +
labs(title = "Percentage Of NBER Working Papers Published In Journals",
subtitle = "Overall (red) and by research programe")
temp_df <- temp3 %>%
group_by(date1) %>%
summarise("pub_perc" = mean(published,na.rm=TRUE)) %>%
filter(date1%in%1985:2010)
plot2 +
geom_line(data = temp_df,
aes(x = date1, y = pub_perc, group=1),
color = "red", size = 2)
# Chunk 8: plot4
# Publication rates over time by total and by gender
plot3 <- temp3 %>%
group_by(date1, gender) %>%
summarise("pub_perc" = mean(published), n_papers = n()) %>%
filter(date1%in%1985:2010) %>%
filter(n_papers> 30) %>%
ggplot(aes(x=date1, y = pub_perc,
color = gender, group = gender)) +
geom_line() +
labs(title = "Percentage Of NBER Working Papers Published In Journals",
subtitle = "Overall (red) and by gender")
temp_df <- temp3 %>%
group_by(date1) %>%
summarise("pub_perc" = mean(published,na.rm=TRUE)) %>%
filter(date1%in%1985:2010)
plot3 +
geom_line(data = temp_df,
aes(x = date1, y = pub_perc, group=1),
color = "red", size = 1)
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv("DATAVERSE_KEY" = "examplekey12345")
Sys.setenv("DATAVERSE_SERVER" = "dataverse.harvard.edu")
# Loading required libraries
list.of.packages <- c("tidyverse", "gender", "arm")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages, repos= "http://cran.cnr.berkeley.edu/")
lapply(list.of.packages, require, character.only = TRUE)
# Setting working directory
library(here)
# Setting up workflow
for (folder in c("rawdata", "data", "documentation", "output", "paper", "scripts")) {
if ( !(folder %in% dir()) ) {
dir.create(folder)
}
}
#readme_file <- file.path("README.md")
writeLines("# Descriptive statistics of NBER Working Paper Series", "README.md")
#df <- read_csv( "rawdata/test.csv")
load("rawdata/all_NBER_Papers_v1.RData")
